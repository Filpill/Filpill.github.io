<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>List of Data Projects on Filip Livancic</title>
    <link>https://filpill.github.io/data_projects/</link>
    <description>Recent content in List of Data Projects on Filip Livancic</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://filpill.github.io/data_projects/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Arch Linux Installation Guide</title>
      <link>https://filpill.github.io/data_projects/arch_install/</link>
      <pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://filpill.github.io/data_projects/arch_install/</guid>
      <description>Introduction This guide details the installation procdure of Arch onto a Virtual Machine (VM). Network configuration is not in the scope of this guide if you are installing on bare metal.
The motivation behind this web page is to keep some guidance material for myself and also for anybody new looking to install Arch from scratch.
The virtual machine is made with Microsofts Hyper-V program. The steps may differ slightly if you choose to use a another hypervisor such as VirtualBox.</description>
    </item>
    
    <item>
      <title>Chess.com API - Data Visualisation</title>
      <link>https://filpill.github.io/data_projects/chess/</link>
      <pubDate>Mon, 10 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://filpill.github.io/data_projects/chess/</guid>
      <description>Summary I&amp;rsquo;ve played a decent number of chess games on the chess.com platform since 2019 and all my chess data can be explored using the API endpoints documented inside the website.
I was interested in monitoring my rating change over the cumalative number of games played.
Link to the project here: Chess.com - Python Analysis
Analytics Process Flow graph TD; subgraph Process Initiation 0([Python Notebook Executed])--&gt;A[HTTPS Request Chess Username Stats] end subgraph Data Extraction A--&gt;B[Requesting List of Month Endpoints] B--&gt;C[Request List Games For Each Month Endpoint] C--&gt;D[Unpack all Games into Dataframe] end subgraph Data Cleaning D--&gt;E[Filtering to Blitz Chess Games] E--&gt;F[Cleaning pgn Chess data</description>
    </item>
    
    <item>
      <title>Codewars API - User Statistics</title>
      <link>https://filpill.github.io/data_projects/codewars/</link>
      <pubDate>Wed, 09 Nov 2022 20:13:56 +0000</pubDate>
      
      <guid>https://filpill.github.io/data_projects/codewars/</guid>
      <description>Summary I&amp;rsquo;ve been very involved in practising my programming skills in python and sql lately on codewars.
I figured it would be a good idea to visualise my codewars progression.
I&amp;rsquo;m utilising the codewars public API to pull out my information. The user data is processed in Python with the output being consolidated into a Excel dashboard using Xlsxwriter.
Link to github project: https://github.com/Filpill/codewars-stats
Analytics Process Flow graph TD; subgraph Process Initiation 0([Python Notebook Executed])--&gt;A[HTTPS Request Codewars Username Stats] end subgraph Return JSON A--&gt;C[Username Profile Data] A--&gt;D[List of Compeleted Kata by User] A--&gt;E[Individual Challenge Details] end subgraph Merge Data D--&gt;F[Merge Data via the Kata ID] E--&gt;F F--&gt;G[Re-name Columns to Better Format] end subgraph Count Aggregates G--&gt;H[Categories] G--&gt;I[Monthly Completions] G--&gt;J[Kata Rank] G--&gt;K[Languages] end subgraph Visualisation H--&gt;L[Graphing Cats.</description>
    </item>
    
    <item>
      <title>Tableau Client Server API: Extracting Dashboard Images</title>
      <link>https://filpill.github.io/data_projects/tableauapi/</link>
      <pubDate>Fri, 16 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://filpill.github.io/data_projects/tableauapi/</guid>
      <description>Summary I&amp;rsquo;ve been in the process of developing numerous Tableau dashboards across different areas of the airline business to share safety data across the organisation.
However, there is no easy way to download all the various charts from dashboard views you have produced to recycle for the purpose of a powerpoint presentation.
Ideally we want to avoid duplicating the data analytics process in other systems such as Python as we don&amp;rsquo;t want to incur uncessary work to present the same information.</description>
    </item>
    
    <item>
      <title>Building Data Pipelines With Python: Systems Perspective</title>
      <link>https://filpill.github.io/data_projects/data_system/</link>
      <pubDate>Sat, 23 Jul 2022 21:12:42 +0100</pubDate>
      
      <guid>https://filpill.github.io/data_projects/data_system/</guid>
      <description>Summary There are endless oppertunities to streamline processes and automate our data production tasks.
This article serves as an example for the wide ranging applications I&amp;rsquo;ve been using Python to automate both simple and complex tasks with high efficiency.
Data Pipelines These are some of the goals we are trying to achieve:
To build complete end-to-end data solutions from the data source to user. We want to minimise manual task interventions during the data processing.</description>
    </item>
    
    <item>
      <title>Github - Command Line Interface Procedures</title>
      <link>https://filpill.github.io/data_projects/github/</link>
      <pubDate>Sun, 17 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://filpill.github.io/data_projects/github/</guid>
      <description>Summary Documenting the most common ways I interact with git and in maintaining my programs. For reference these actions are performed via the command line.
In my opinion the main benefit of using a CLI is the added efficiency of the scripting out the majority of the process via usage of shell scripts.
This allows you to direct all of your attention on effortless creating work without getting lost in a GUI just to push a new commit.</description>
    </item>
    
    <item>
      <title>Website Design with Hugo Framework</title>
      <link>https://filpill.github.io/data_projects/hugo/</link>
      <pubDate>Fri, 03 Jun 2022 12:29:15 +0100</pubDate>
      
      <guid>https://filpill.github.io/data_projects/hugo/</guid>
      <description>Summary I wanted to showcase my projects without devoting a large amount of time to maintaining HTML code and needed a framework to make it easy to share my projects.
Hugo is a static site generator written in Go and compiles your documents written in markdown into cleanly formatted HTML and CSS files.
The first iteration of my website was manually written in HTML/CSS. It was a little bit ugly compared to the second iteration which is using hugo framework.</description>
    </item>
    
  </channel>
</rss>
