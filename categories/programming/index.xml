<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>programming on Filip Livancic</title>
    <link>https://filpill.github.io/categories/programming/</link>
    <description>Recent content in programming on Filip Livancic</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 06 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://filpill.github.io/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Raspberry Pi Remote Access Guide</title>
      <link>https://filpill.github.io/data_projects/pi_ssh/</link>
      <pubDate>Thu, 06 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://filpill.github.io/data_projects/pi_ssh/</guid>
      <description>Summary This article documents how to remotely access your Raspberry Pi using either Secure Shell (SSH) or Remote Desktop Protocol (RDP).
The benefit of remote access is that you do not need to constantly plug in a wired keyboard and mouse to do some configuration on your Pi devices.
The SSH access is ideal for cases with exclusive involvement of the terminal. The remote desktop acess is requied for situations using the graphical desktop environment.</description>
    </item>
    
    <item>
      <title>Python Lottery Game</title>
      <link>https://filpill.github.io/page_archive/lottery/</link>
      <pubDate>Sat, 18 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://filpill.github.io/page_archive/lottery/</guid>
      <description>Summary A game where you test your luck: Pick some numbers and try to win!
Link to github project: https://github.com/Filpill/lottery-game
Lottery Algorithm flowchart TD; subgraph Lottery Algorithm start(Pick \nLottery Numbers) --Check--&gt; check{Are the \ninputs valid?} check --Yes--&gt; draw[Generate Randomised\nLottery Draw] check --No--&gt; start draw --&gt; match{Do Picks Match the\n Lottery Draw?} match --Yes--&gt; win(Winner!) match --No--&gt; reroll[Chance to reroll\nthe incorrect numbers] reroll --&gt; check2{Did you hit any\n more correct picks?} check2 --No--&gt; lost(Loser!</description>
    </item>
    
    <item>
      <title>Codewars API - User Statistics</title>
      <link>https://filpill.github.io/data_projects/codewars/</link>
      <pubDate>Wed, 09 Nov 2022 20:13:56 +0000</pubDate>
      
      <guid>https://filpill.github.io/data_projects/codewars/</guid>
      <description>Summary I&amp;rsquo;ve been very involved in practising my programming skills in python and sql lately on codewars.
I figured it would be a good idea to visualise my codewars progression.
I&amp;rsquo;m utilising the codewars public API to pull out my information. The user data is processed in Python with the output being consolidated into a Excel dashboard using Xlsxwriter.
Link to github project: https://github.com/Filpill/codewars-stats
Analytics Process Flow graph TD; subgraph Process Initiation 0([Python Notebook Executed])--&gt;A[HTTPS Request Codewars Username Stats] end subgraph Return JSON A--&gt;C[Username Profile Data] A--&gt;D[List of Compeleted Kata by User] A--&gt;E[Individual Challenge Details] end subgraph Merge Data D--&gt;F[Merge Data via the Kata ID] E--&gt;F F--&gt;G[Re-name Columns to Better Format] end subgraph Count Aggregates G--&gt;H[Categories] G--&gt;I[Monthly Completions] G--&gt;J[Kata Rank] G--&gt;K[Languages] end subgraph Visualisation H--&gt;L[Graphing Cats.</description>
    </item>
    
    <item>
      <title>Tableau Client Server API: Extracting Dashboard Images</title>
      <link>https://filpill.github.io/data_projects/tableauapi/</link>
      <pubDate>Fri, 16 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://filpill.github.io/data_projects/tableauapi/</guid>
      <description>Summary I&amp;rsquo;ve been in the process of developing numerous Tableau dashboards across different areas of the airline business to share safety data across the organisation.
However, there is no easy way to download all the various charts from dashboard views you have produced to recycle for the purpose of a powerpoint presentation.
Ideally we want to avoid duplicating the data analytics process in other systems such as Python as we don&amp;rsquo;t want to incur uncessary work to present the same information.</description>
    </item>
    
    <item>
      <title>Building Data Pipelines With Python: Systems Perspective</title>
      <link>https://filpill.github.io/data_projects/data_system/</link>
      <pubDate>Sat, 23 Jul 2022 21:12:42 +0100</pubDate>
      
      <guid>https://filpill.github.io/data_projects/data_system/</guid>
      <description>Summary There are endless oppertunities to streamline processes and automate our data production tasks.
This article serves as an example for the wide ranging applications I&amp;rsquo;ve been using Python to automate both simple and complex tasks with high efficiency.
Data Pipelines These are some of the goals we are trying to achieve:
To build complete end-to-end data solutions from the data source to user. We want to minimise manual task interventions during the data processing.</description>
    </item>
    
    <item>
      <title>Github - Command Line Interface Procedures</title>
      <link>https://filpill.github.io/data_projects/github/</link>
      <pubDate>Sun, 17 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://filpill.github.io/data_projects/github/</guid>
      <description>Summary This article documents the most common ways I interact with git and in maintaining my programs.
graph LR; subgraph High-Level Process direction LR 0[Installation]--&gt;1[SSH] 1 --&gt; 2[Git Configuration] 2 --&gt; 3[New Repository] 3 --&gt; 4[Commit Changes] end Why should I use Git with the Command Line? Git was designed as a command-line tool, therefore it&amp;rsquo;s considered the de-facto way to interact with Git&amp;rsquo;s tools.
Any other versions of Git are just wrappers for what Git does on the command-line.</description>
    </item>
    
  </channel>
</rss>
