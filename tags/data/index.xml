<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>data on Filip Livancic</title>
    <link>https://filpill.github.io/tags/data/</link>
    <description>Recent content in data on Filip Livancic</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 22 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://filpill.github.io/tags/data/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Chess.com API - Data Visaulisation</title>
      <link>https://filpill.github.io/projects/chess/</link>
      <pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://filpill.github.io/projects/chess/</guid>
      <description>Summary I&amp;rsquo;ve played a fair amount of chess on the chess.com platform since 2019 and fortunately all my chess data can be explored using the API endpoints documented inside the website.
I&amp;rsquo;ve was interested in seeing how my rating has changed over time from a graphical perspective.
Though, I didn&amp;rsquo;t make much improvement given that I was playing chess casuallly and was not learning chess strategy in depth.
Link to the project here: Chess.</description>
    </item>
    
    <item>
      <title>Age of Empire 2 API - Data Visualisation</title>
      <link>https://filpill.github.io/projects/aoe2/</link>
      <pubDate>Tue, 31 May 2022 00:59:13 +0100</pubDate>
      
      <guid>https://filpill.github.io/projects/aoe2/</guid>
      <description>Summary I decided to showcase some data transformations on I game that usually play and see if I could get some cool visualisations/insights. I&amp;rsquo;m using an API to replicate a sample of data visualisations I would typically make. In my work I normally query out of a SQL database for my data ingestion but trying something new here as an experiment. This was my first time using an API to extract JSON data, but its very easy to manipulate on Python to transform into a dict/dataframe.</description>
    </item>
    
  </channel>
</rss>
