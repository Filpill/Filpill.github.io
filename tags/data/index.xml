<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>data on Filip Livancic</title>
    <link>https://filpill.github.io/tags/data/</link>
    <description>Recent content in data on Filip Livancic</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://filpill.github.io/tags/data/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Chess.com API - Data Visualisation</title>
      <link>https://filpill.github.io/data_projects/chess/</link>
      <pubDate>Mon, 10 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://filpill.github.io/data_projects/chess/</guid>
      <description>Summary I&amp;rsquo;ve played a decent number of chess games on the chess.com platform since 2019 and all my chess data can be explored using the API endpoints documented inside the website.
I was interested in monitoring my rating change over the cumalative number of games played.
Link to the project here: Chess.com - Python Analysis
Analytics Process Flow graph TD; subgraph Process Initiation 0([Python Notebook Executed])--&gt;A[HTTPS Request Chess Username Stats] end subgraph Data Extraction A--&gt;B[Requesting List of Month Endpoints] B--&gt;C[Request List Games For Each Month Endpoint] C--&gt;D[Unpack all Games into Dataframe] end subgraph Data Cleaning D--&gt;E[Filtering to Blitz Chess Games] E--&gt;F[Cleaning pgn Chess data</description>
    </item>
    
    <item>
      <title>Age of Empire 2 API - Data Visualisation</title>
      <link>https://filpill.github.io/page_archive/aoe2/</link>
      <pubDate>Tue, 31 May 2022 00:59:13 +0100</pubDate>
      
      <guid>https://filpill.github.io/page_archive/aoe2/</guid>
      <description>Summary I decided to showcase some data transformations on I game that usually play and see if I could get some cool visualisations/insights. I&amp;rsquo;m using an API to replicate a sample of data visualisations I would typically make. In my work I normally query out of a SQL database for my data ingestion but trying something new here as an experiment. This was my first time using an API to extract JSON data, but its very easy to manipulate on Python to transform into a dict/dataframe.</description>
    </item>
    
  </channel>
</rss>
