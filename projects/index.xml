<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Projects on Filip Livancic</title>
    <link>https://filpill.github.io/projects/</link>
    <description>Recent content in Projects on Filip Livancic</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 24 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://filpill.github.io/projects/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Codewars - Solving Coding Problems</title>
      <link>https://filpill.github.io/projects/codewars/</link>
      <pubDate>Fri, 24 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://filpill.github.io/projects/codewars/</guid>
      <description>Codewars Badge Predominantly solving Python and SQL problems
Codewars profile: Filpill - Codewars Profile
What is Codewars? A website that provides challenges for you to solve in a variety of programming languages. The higher the rank of the problem, the harder it is to solve.
Rank System Ranks are used to indicate the proficiency of users and the difficulty of Kata. There are two classes of ranks, Kyu and Dan, which are divided in 8 levels each.</description>
    </item>
    
    <item>
      <title>Web Scraper - Valorant Data Analysis</title>
      <link>https://filpill.github.io/projects/val_scrp/</link>
      <pubDate>Mon, 13 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://filpill.github.io/projects/val_scrp/</guid>
      <description>Summary I was originally looking for a Valorant API to analyse some of my own match data, however Riot games do not hand out personal API keys for this game.
I figured I could scrape some of my own match data which is publically available on the web client side.
Though the data is fairly limited due to built in limitations of the Riot Valorant API. The website only pulls 30 matches worth of data.</description>
    </item>
    
    <item>
      <title>Front-end Design - Static Site Generator</title>
      <link>https://filpill.github.io/projects/hugo/</link>
      <pubDate>Fri, 03 Jun 2022 12:29:15 +0100</pubDate>
      
      <guid>https://filpill.github.io/projects/hugo/</guid>
      <description>Summary I wanted to showcase my projects without devoting a large amount of time to maintaining HTML code and needed a framework to make it easy to share my projects.
Hugo is a static site generator written in Go and compiles your documents written in markdown into cleanly formatted HTML and CSS files.
The first iteration of my website was manually written in HTML/CSS. It was a little bit ugly compared to the second iteration which is using hugo framework.</description>
    </item>
    
    <item>
      <title>Age of Empire 2 API - Data Visualisation</title>
      <link>https://filpill.github.io/projects/aoe2/</link>
      <pubDate>Tue, 31 May 2022 00:59:13 +0100</pubDate>
      
      <guid>https://filpill.github.io/projects/aoe2/</guid>
      <description>Summary  I decided to showcase some data transformations on I game that usually play and see if I could get some cool visualisations/insights. I&amp;rsquo;m using an API to replicate a sample of data visualisations I would typically make. In my work I normally query out of a SQL database for my data ingestion but trying something new here as an experiment. This was my first time using an API to extract JSON data, but its very easy to manipulate on Python to transform into a dict/dataframe.</description>
    </item>
    
    <item>
      <title>Lithophane Lamp</title>
      <link>https://filpill.github.io/projects/litho/</link>
      <pubDate>Sat, 13 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://filpill.github.io/projects/litho/</guid>
      <description>Summary  Designed a 3D printed lithophane lamp in Soldworks. Main feature: Replaceable lithophanes of chosen standard of aspect ratio/dimension.  Features  Top/Bottom Panels retained with three M3 screws &amp;ndash; Removing the panels gives access to replacing the printed lithophane. Wiring threads through back of assembly and socket leans on back the back panel. Forward attachment clamps the socket and constrains the foward movement of the light socket with screws.</description>
    </item>
    
    <item>
      <title>3D Printed Car - Bluetooth Controller Interface</title>
      <link>https://filpill.github.io/projects/3dcar/</link>
      <pubDate>Thu, 21 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://filpill.github.io/projects/3dcar/</guid>
      <description>Summary  Personal project to design and build a 3D printed car from scratch. Project status is currently dormant as I haven&amp;rsquo;t had time to iterate over the design due to the complexity and required time investment.  The project was gradually being built over the course of 2020 and 2021. Though incomplete, I may return to this project at a later stage (with a smaller scope) after finishing some other projects.</description>
    </item>
    
    <item>
      <title>2D Heat Transfer Simulation</title>
      <link>https://filpill.github.io/projects/ht_sim/</link>
      <pubDate>Sat, 10 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://filpill.github.io/projects/ht_sim/</guid>
      <description>Summary  Re-writing 2D heat transfer simulation designed in MATLAB to Python. Solved using Successive Over Relaxation Algorithm and Finite Difference Method used to capture incremental changes of temeperature on grid. Animated the heat transitions in Python at each timestep using FuncAnimation component of matplotlib. LHS boundaries on the mesh and the application of the heat input on the leftmost nodes. Heat Input lasts 2 seconds in resulting simulation before being turned off.</description>
    </item>
    
    <item>
      <title>UAV Aircraft Design</title>
      <link>https://filpill.github.io/projects/uav/</link>
      <pubDate>Sun, 17 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://filpill.github.io/projects/uav/</guid>
      <description>Summary  My elected project for my 4th year in University was to design and build a UAV aircraft. The design requirements were driven out from the 2017 BMFA competition (Payload Challenge). The design had to be capable of flying some circuits with varying volumes of water weighing up to 3.5kg. As project engineer, I was responsible for coordinating the technical requirements and outputs between our sub-teams. Link to Project Report  Aircraft Design Process   The aircraft design process used in this project is an adaptation of the design process learnt in university for commercial passenger aircraft design.</description>
    </item>
    
    <item>
      <title>Forward Facing Step - Particle Image Velocimetry</title>
      <link>https://filpill.github.io/projects/piv/</link>
      <pubDate>Thu, 01 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://filpill.github.io/projects/piv/</guid>
      <description>Summary   My 3rd year project in University was to design a Forward Facing Step and perform wind tunnel experiments to analyse flow characteristics on that geometry using PIV.
  Particle Image Velocimetry is a practical tool for Aerodynamics analyse flow fields without intrusions in the wind tunnel environment such as sensors or pitot probes.
  In this experiment the height of the boundary layer is similarly proportioned to the height of the step.</description>
    </item>
    
  </channel>
</rss>
